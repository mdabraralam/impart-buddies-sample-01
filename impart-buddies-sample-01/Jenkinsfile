pipeline {
    agent any

    environment {
        // Define global environment variables if needed
        BRANCH = 'main' // Change branch if needed
        REPO_URL = 'https://github.com/mdabraralam/impart-buddies-sample-01.git'
        DOCKER_IMAGE = 'mdabraralam/impart-bodies-sample-service'
        IMAGE_TAG = "0.0.1-SNAPSHOT"
        DOCKER_CREDENTIALS = 'docker-login' // Your Jenkins credentials ID
    } 
    
    tools {
        maven 'Maven-3.8.6' // Use the exact name defined in Jenkins
    }

    stages {
        
        stage('Checkout') {
            steps {
                echo 'Checking out code...'
                checkout([$class: 'GitSCM', 
                    branches: [[name: "*/${BRANCH}"]],
                    userRemoteConfigs: [[url: "${REPO_URL}"]]
                ])
            }
        }

        // stage('Test') {
        //     steps {
        //         echo 'Running tests...'
        //         bat 'mvn -f impart-buddies-sample-01/pom.xml test' // Or 'mvn test' for Maven
        //     }
        // }
        stage('Build') {
            steps {
                echo 'Building project...'
                bat '''
                    cd impart-buddies-sample-01
                    dir
                    echo "Building project..."
                    mvn clean install
                '''
                //bat 'mvn -f impart-buddies-sample-01/pom.xml clean install' // Or use 'mvn clean install' for Maven
            }
        } 
        stage('Build Docker Image') {
            steps {
                bat '''
                    cd impart-buddies-sample-01
                    dir
                    echo "Building docker image..."
                    docker build -f Dockerfile ^
                    -t %DOCKER_IMAGE%:%IMAGE_TAG% ^
                    --build-arg JAR_VERSION=%IMAGE_TAG% ^
                    .
                '''
            }
        }
        // stage('Docker Build') {
        //     steps {
        //         dir('eureka-server') {
        //             echo 'Building Docker Image...'
        //             cd impart-buddies-sample-01
        //             // Docker build command using bat
        //             bat "docker build -f impart-buddies-sample-01/Dockerfile -t %DOCKER_IMAGE%:%IMAGE_TAG% --build-arg JAR_VERSION=%IMAGE_TAG% impart-buddies-sample-01/."
        //         }
        //     }
        // }

        stage('Push Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-login', 
                                                  usernameVariable: 'mdabraralam', 
                                                  passwordVariable: 'dckr_pat_4yHJVeYZCtk48Tlo-RqH03VZxUE')]) {
                    bat '''
                        echo "Logging into Docker Hub..."
                        docker login -u %DOCKER_USERNAME% -p %DOCKER_PASSWORD%

                        echo "Pushing Docker image to repository..."
                        docker push %DOCKER_IMAGE%:%IMAGE_TAG%
                    '''
                }
            }
        }
    }

    post {
        always {
            echo 'Pipeline execution completed.'
        }
        success {
            echo 'Docker image built and pushed successfully.'
        }
        failure {
            echo 'Docker image build failed. Please check the logs.'
        }
    }
}
